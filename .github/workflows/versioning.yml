name: Versioning

on:
  push:
    branches:
      - dev

jobs:
  update_version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure full commit history

      - name: Set up jq
        run: sudo apt-get install -y jq

      - name: Fetch Latest Changes
        run: |
          git fetch --all
          echo "Current branch: $(git rev-parse --abbrev-ref HEAD)"
          git branch -a

      - name: Extract Changed Files
        run: |
          CHANGED_FILES=$(git diff --name-only origin/dev HEAD)
          echo "Changed files: $CHANGED_FILES"
          echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV

      - name: Determine Branch Name
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          echo "Branch name: $BRANCH_NAME"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Show Current Version File
        run: cat version.json

      - name: Update Version
        run: |
          VERSION_FILE="version.json"

          echo "Processing version updates..."

          increment_version() {
            FILE=$1
            JSON_KEY=$2

            if echo "$CHANGED_FILES" | grep -q "$FILE"; then
              echo "Detected change in $FILE"

              CURRENT_VERSION=$(jq -r ".\"$JSON_KEY\"" $VERSION_FILE)
              echo "Current $JSON_KEY version: $CURRENT_VERSION"

              IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"

              if [[ "$BRANCH_NAME" == *"feature"* ]]; then
                ((MAJOR++)); MINOR=0; PATCH=0
                echo "Feature branch detected - incrementing MAJOR version"
              elif [[ "$BRANCH_NAME" == *"enhancement"* ]]; then
                ((MINOR++)); PATCH=0
                echo "Enhancement branch detected - incrementing MINOR version"
              else
                ((PATCH++))
                echo "Bug fix or unspecified branch - incrementing PATCH version"
              fi

              NEW_VERSION="$MAJOR.$MINOR.$PATCH"
              echo "Updated $JSON_KEY version: $NEW_VERSION"

              jq ".\"$JSON_KEY\" = \"$NEW_VERSION\"" $VERSION_FILE > tmp.json && mv tmp.json $VERSION_FILE
            else
              echo "No changes detected in $FILE, skipping version update for $JSON_KEY."
            fi
          }

          increment_version "app.py" "App_version"
          increment_version "preprocessor.py" "Preprocessor"
          increment_version "tts.py" "TTS Engine"

      - name: Show Updated Version File
        run: cat version.json

      - name: Commit and Push Changes
        run: |
          if ! git diff --quiet; then
            git config --global user.email "github-actions@github.com"
            git config --global user.name "GitHub Actions"
            git add version.json
            git commit -m "Auto-increment version [skip ci]"
            git push
          else
            echo "No version updates were made, skipping commit."
          fi
