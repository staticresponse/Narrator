name: Versioning - Preprocessor

on:
  push:
    branches:
      - dev
    paths:
      - "preprocessor.py"

jobs:
  update_version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Git Authentication
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git config --global credential.helper store
          echo "https://${{ secrets.GITHUB_TOKEN }}@github.com" > ~/.git-credentials
          chmod 600 ~/.git-credentials

      - name: Determine Changed Files
        id: changed-files
        run: |
          echo "Checking for file changes..."
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)
          echo "Changed files: $CHANGED_FILES"
          echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV

      - name: Update Version
        run: |
          set -e  # Exit on error
          
          VERSION_FILE="version.json"
          BRANCH_NAME="${{ github.ref_name }}"

          echo "Processing version updates..."
          echo "Branch: $BRANCH_NAME"

          increment_version() {
            FILE=$1
            JSON_KEY=$2

            if echo "$CHANGED_FILES" | grep -q "$FILE"; then
              echo "Detected change in $FILE"

              CURRENT_VERSION=$(jq -r ".\"$JSON_KEY\"" $VERSION_FILE)

              if [[ ! $CURRENT_VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
                echo "Error: Invalid version format for $JSON_KEY: '$CURRENT_VERSION'"
                exit 1
              fi

              echo "Current $JSON_KEY version: $CURRENT_VERSION"

              IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION" || {
                echo "Error: Failed to parse version '$CURRENT_VERSION'"
                exit 1
              }

              if [[ "$BRANCH_NAME" == *"feature"* ]]; then
                ((MAJOR++)); MINOR=0; PATCH=0
                echo "Feature branch detected - incrementing MAJOR version and resetting MINOR and PATCH to 0"
              elif [[ "$BRANCH_NAME" == *"enhancement"
